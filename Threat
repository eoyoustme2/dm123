---====== Load spawner ======---

local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

---====== Create entity ======---

local entity = spawner.Create({
	Entity = {
		Name = "Threat",
		Asset = "https://github.com/localplayerr/Doors-stuff/raw/main/Mayhem%20mode%20recreate/Threat.rbxm",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {
			Enabled = true,
			Duration = 1
		},
		Shatter = true,
		Repair = false
	},
	Earthquake = {
		Enabled = true
	},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
	},
	Movement = {
		Speed = 350,
		Delay = 2,
		Reversed = false
	},
	Rebounding = {
		Enabled = true,
		Type = "Ambush", -- "Blitz"
		Min = 1,
		Max = 1,
		Delay = 2
	},
	Damage = {
		Enabled = true,
		Range = 100,
		Amount = 0.01
	},
	Crucifixion = {
		Enabled = true,
		Range = 40,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding", -- "Curious"
		Hints = {"Death", "Hints", "Go", "Here"},
		Cause = ""
	}
})

---====== Debug entity ======---

entity:SetCallback("OnSpawned", function()
    print("Entity has spawned")
local Lighting = game:GetService("Lighting")
local TweenService = game:GetService("TweenService")

-- T·∫°o ho·∫∑c t√¨m MainColorCorrection
local colorCorrection = Lighting:FindFirstChild("MainColorCorrection")
if not colorCorrection then
    colorCorrection = Instance.new("ColorCorrectionEffect")
    colorCorrection.Name = "MainColorCorrection"
    colorCorrection.Parent = Lighting
end

-- Thi·∫øt l·∫≠p ban ƒë·∫ßu
colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
colorCorrection.Contrast = 10

-- Tween gi·∫£m contrast xu·ªëng 0 trong 2.5 gi√¢y
TweenService:Create(colorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play()

-- Chuy·ªÉn sang m√†u ƒë·ªè trong 5 gi√¢y
local redTween = TweenService:Create(colorCorrection, TweenInfo.new(5), {TintColor = Color3.fromRGB(250, 0, 0)})
redTween:Play()

-- Ch·ªù tween m√†u ƒë·ªè ho√†n t·∫•t
task.wait(5)

-- Danh s√°ch c√°c m√†u ƒë·ªÉ ƒë·ªïi
local colors = {
    Color3.fromRGB(255, 255, 0),   -- V√†ng
    Color3.fromRGB(0, 0, 255),     -- Xanh d∆∞∆°ng
    Color3.fromRGB(0, 255, 0),     -- Xanh l√°
    Color3.fromRGB(255, 105, 180)  -- H·ªìng
}

-- L·∫∑p 4 l·∫ßn ƒë·ªïi m√†u
for _ = 1, 4 do
    for _, color in ipairs(colors) do
        local tween = TweenService:Create(colorCorrection, TweenInfo.new(0.7), {TintColor = color})
        tween:Play()
        task.wait(0.7)
    end
end

-- Sau khi ho√†n t·∫•t, chuy·ªÉn l·∫°i v·ªÅ m√†u ƒë·ªè
local finalRed = TweenService:Create(colorCorrection, TweenInfo.new(1), {TintColor = Color3.fromRGB(250, 0, 0)})
finalRed:Play()
end)

entity:SetCallback("OnStartMoving", function()
    print("Entity has started moving")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
    if firstTime == true then
        print("Entity has entered room: ".. room.Name.. " for the first time")
    else
        print("Entity has entered room: ".. room.Name.. " again")
    end
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight == true then
		print("Player is looking at entity")
	else
		print("Player view is obstructed by something")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
    if startOfRebound == true then
        print("Entity has started rebounding")
	else
        print("Entity has finished rebounding")
game.Lighting.MainColorCorrection.TintColor = Color3.fromRGB(170, 85, 0)
game.Lighting.MainColorCorrection.Contrast = 1
game.Lighting.MainColorCorrection.Saturation = -0.9
local tween = game:GetService("TweenService")
tween:Create(game.Lighting.MainColorCorrection, TweenInfo.new(2), {Contrast = 0}):Play()
tween:Create(game.Lighting.MainColorCorrection, TweenInfo.new(2), {Saturation = 0}):Play()
local TweenService = game:GetService("TweenService")
local TW = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(5),{TintColor = Color3.fromRGB(255, 255, 255)})
TW:Play()
	end
end)

entity:SetCallback("OnDespawning", function()
    print("Entity is despawning")
wait(3)
game.Lighting.MainColorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
game.Lighting.MainColorCorrection.Contrast = 10
local tween = game:GetService("TweenService")
tween:Create(game.Lighting.MainColorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play()
local TweenService = game:GetService("TweenService")
local TW = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(5),{TintColor = Color3.fromRGB(255, 255, 255)})
TW:Play()
end)

entity:SetCallback("OnDespawned", function()
    print("Entity has despawned")
end)

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		print("Entity has killed the player")
	else
		print("Entity has damaged the player")

		task.spawn(function()
			local player = Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoid = character:WaitForChild("Humanoid", 5)
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			local camera = workspace.CurrentCamera

			local entityModel = workspace:WaitForChild("Threat")
			local primaryPart = entityModel:FindFirstChild("RushNew")

			if not (entityModel and humanoid and humanoidRootPart and primaryPart and camera) then return end

			-- üîí Kh√≥a di chuy·ªÉn
			local originalWalkSpeed = humanoid.WalkSpeed
			local originalJumpPower = humanoid.JumpPower
			humanoid.WalkSpeed = 0
			humanoid.JumpPower = 0

			-- üîí Kh√≥a ƒëi·ªÅu khi·ªÉn chu·ªôt (camera)
			local controlsModule = require(player:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule")):GetControls()
			controlsModule:Disable()

			local to = true
			task.spawn(function()
				while to and primaryPart.Parent and humanoidRootPart.Parent do
					local targetCFrame = humanoidRootPart.CFrame
					local tween = TweenService:Create(primaryPart, TweenInfo.new(200000000000000000000, Enum.EasingStyle.Quad), {CFrame = targetCFrame})
					tween:Play()
					tween.Completed:Wait()
				end
			end)

			camera.CameraType = Enum.CameraType.Scriptable

			local lockConnection
			lockConnection = RunService.RenderStepped:Connect(function()
				if not primaryPart or not primaryPart.Parent then
					if lockConnection then lockConnection:Disconnect() end
					return
				end
				camera.CFrame = CFrame.lookAt(camera.CFrame.Position, primaryPart.Position)
			end)

			-- üëÅ‚Äçüó® UI Jumpscare
			local screenGui = Instance.new("ScreenGui")
			screenGui.Name = "JumpscareOverlay"
			screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			screenGui.ResetOnSpawn = false
			screenGui.IgnoreGuiInset = true
			screenGui.DisplayOrder = 999999
			screenGui.Parent = player:WaitForChild("PlayerGui")

			local imageLabel = Instance.new("ImageLabel")
			imageLabel.Name = "JumpscareImage"
			imageLabel.BackgroundTransparency = 1
			imageLabel.BorderSizePixel = 0
			imageLabel.Position = UDim2.new(0, 0, 0, 0)
			imageLabel.Size = UDim2.new(1, 0, 1, 0)
			imageLabel.AnchorPoint = Vector2.new(0, 0)
			imageLabel.ScaleType = Enum.ScaleType.Stretch
			imageLabel.Image = ""
			imageLabel.Visible = true
			imageLabel.Parent = screenGui

			local jumpscareImage1 = "rbxassetid://0"
			local jumpscareImage2 = "rbxassetid://0"

			local flashDuration = 1
			local flashStartTime = tick()

			task.spawn(function()
				while tick() - flashStartTime < flashDuration do
					imageLabel.Image = jumpscareImage1
					task.wait(0)
					imageLabel.Image = jumpscareImage2
					task.wait(0)
				end
				imageLabel.Visible = false
			end)

			task.wait(4.8)

			to = false

			-- üíÄ Gi·∫øt ng∆∞·ªùi ch∆°i
			if humanoid then humanoid.Health = 0 end

			-- üßπ Cleanup
			if entityModel and entityModel.Parent then
				entityModel:Destroy()
			end

			if lockConnection then
				lockConnection:Disconnect()
			end

			camera.CameraType = Enum.CameraType.Custom

			if screenGui and screenGui.Parent then
				screenGui:Destroy()
			end

			-- üîì Kh√¥i ph·ª•c ƒëi·ªÅu khi·ªÉn (ch·ªâ n·∫øu nh√¢n v·∫≠t ch∆∞a ch·∫øt s·ªõm)
			if humanoid and humanoid.Health > 0 then
				humanoid.WalkSpeed = originalWalkSpeed
				humanoid.JumpPower = originalJumpPower
				controlsModule:Enable()
			end
		end)
	end
end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

---====== Run entity ======---

entity:Run()
